{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kemal/Documents/GitHub/bilmiyorum/Expo/src/screens/randomHash.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport Constants from 'expo-constants';\nimport CryptoJS from 'crypto-js';\nimport { keccak224, keccak256, keccak384, keccak512, sha3_224, sha3_256, sha3_384, sha3_512, shake128, shake256 } from 'js-sha3';\nimport { responsiveScreenHeight, responsiveScreenWidth, responsiveScreenFontSize } from 'react-native-responsive-dimensions';\nconsole.log(\"ProofofConcept.\");\nvar device = [Constants.appOwnership, Constants.debugMode, Constants.deviceName, Constants.deviceYearClass, Constants.experienceUrl, Constants.expoRuntimeVersion, Constants.expoVersion, Constants.installationId, Constants.intentUri, Constants.isDetached, Constants.isDevice, Constants.isHeadless, Constants.linkingUri, Constants.linkingUrl, Constants.name, Constants.nativeAppVersion, Constants.nativeBuildVersion, Constants.sessionId, Constants.statusBarHeight, Constants.systemVersion, Clipboard.getString];\nvar hamDegerler = [Constants.appOwnership, Constants.debugMode, Constants.deviceName, Constants.deviceYearClass, Constants.experienceUrl, Constants.expoRuntimeVersion, Constants.expoVersion, Constants.getWebViewUserAgentAsync, Constants.installationId, Constants.intentUri, Constants.isDetached, Constants.isDevice, Constants.isHeadless, Constants.linkingUri, Constants.linkingUrl, Constants.manifest, Constants.name, Constants.nativeAppVersion, Constants.nativeBuildVersion, Constants.platform, Constants.sessionId, Constants.statusBarHeight, Constants.systemFonts, Constants.systemVersion];\n\nvar randomHash = function randomHash() {\n  var sayac = 0;\n\n  var _useState = useState(\"04279ffb99c19c5768536d46b9f1143a1412b75d46024f88554a83c0e05613f20beab7589173d584aebfa73fb3512376689c2cbb8ecd0067677f43e0f5bfd2ce\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      kelime = _useState2[0],\n      setKelime = _useState2[1];\n\n  var rhashFunc = function rhashFunc() {\n    while (sayac < Math.floor(Math.random() * 9999) + 500) {\n      var deger = CryptoJS.SHA3(deger + device[Math.floor(Math.random() * device.length - 1)]).toString(CryptoJS.enc.Hex);\n      sayac++;\n      setKelime(deger);\n    }\n\n    ;\n  };\n\n  var DATA = [{\n    hash: sha3_512(kelime),\n    title: \"SHA3 512 \"\n  }, {\n    hash: sha3_384(kelime),\n    title: \"SHA3 384 \"\n  }, {\n    hash: sha3_256(kelime),\n    title: \"SHA3 256 \"\n  }, {\n    hash: sha3_224(kelime),\n    title: \"SHA3 224 \"\n  }, {\n    hash: keccak512(kelime),\n    title: \"KECCAK512 \"\n  }, {\n    hash: keccak384(kelime),\n    title: \"KECCAK384 \"\n  }, {\n    hash: keccak256(kelime),\n    title: \"KECCAK256 \"\n  }, {\n    hash: keccak224(kelime),\n    title: \"KECCAK224 \"\n  }, {\n    hash: shake256(kelime, 512),\n    title: \"SHAKE256/512 \"\n  }, {\n    hash: shake128(kelime, 256),\n    title: \"SHAKE128/256 \"\n  }, {\n    hash: CryptoJS.SHA512(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA512\"\n  }, {\n    hash: CryptoJS.SHA384(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA384 \"\n  }, {\n    hash: CryptoJS.SHA256(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA256 \"\n  }, {\n    hash: CryptoJS.SHA224(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA224 \"\n  }, {\n    hash: CryptoJS.SHA1(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA1 \"\n  }, {\n    hash: CryptoJS.MD5(kelime).toString(CryptoJS.enc.Hex),\n    title: \"MD5 \"\n  }, {\n    hash: CryptoJS.RIPEMD160(kelime).toString(CryptoJS.enc.Hex),\n    title: \"RIPEMD160 \"\n  }];\n\n  var copyToClipboard = function copyToClipboard(Text) {\n    sayac = 0;\n    rhashFunc();\n    Clipboard.setString(Text);\n  };\n\n  useEffect(function () {\n    rhashFunc();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 10\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }), React.createElement(FlatList, {\n    style: {\n      width: '100%'\n    },\n    data: DATA,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return copyToClipboard(item.hash);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.hash,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, item.hash)));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    borderBottomColor: 'black',\n    justifyContent: 'space-between',\n    paddingVertical: responsiveScreenWidth(8),\n    paddingHorizontal: responsiveScreenWidth(4),\n    borderBottomWidth: responsiveScreenWidth(0.3)\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: responsiveScreenFontSize(2.7),\n    lineHeight: responsiveScreenFontSize(2.5),\n    paddingVertical: responsiveScreenWidth(3)\n  },\n  hash: {\n    flex: 1,\n    fontSize: responsiveScreenFontSize(2),\n    lineHeight: responsiveScreenFontSize(3),\n    paddingVertical: responsiveScreenWidth(3)\n  }\n});\nexport default randomHash;","map":{"version":3,"sources":["/Users/kemal/Documents/GitHub/bilmiyorum/Expo/src/screens/randomHash.js"],"names":["StatusBar","React","useState","useEffect","Constants","CryptoJS","keccak224","keccak256","keccak384","keccak512","sha3_224","sha3_256","sha3_384","sha3_512","shake128","shake256","responsiveScreenHeight","responsiveScreenWidth","responsiveScreenFontSize","console","log","device","appOwnership","debugMode","deviceName","deviceYearClass","experienceUrl","expoRuntimeVersion","expoVersion","installationId","intentUri","isDetached","isDevice","isHeadless","linkingUri","linkingUrl","name","nativeAppVersion","nativeBuildVersion","sessionId","statusBarHeight","systemVersion","Clipboard","getString","hamDegerler","getWebViewUserAgentAsync","manifest","platform","systemFonts","randomHash","sayac","kelime","setKelime","rhashFunc","Math","floor","random","deger","SHA3","length","toString","enc","Hex","DATA","hash","title","SHA512","SHA384","SHA256","SHA224","SHA1","MD5","RIPEMD160","copyToClipboard","Text","setString","flex","width","item","styles","row","StyleSheet","create","flexDirection","borderBottomColor","justifyContent","paddingVertical","paddingHorizontal","borderBottomWidth","fontWeight","fontSize","lineHeight"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { Text, StyleSheet,View,FlatList, TouchableOpacity, Alert, Clipboard } from 'react-native';\nimport Constants from 'expo-constants';\nimport CryptoJS from 'crypto-js'\nimport { keccak224, keccak256, keccak384, keccak512, sha3_224, sha3_256, sha3_384, sha3_512, shake128, shake256 } from 'js-sha3';\nimport { responsiveScreenHeight, responsiveScreenWidth, responsiveScreenFontSize } from 'react-native-responsive-dimensions'\n\nconsole.log(\"ProofofConcept.\");\n// https://docs.expo.io/versions/v39.0.0/sdk/brightness/\n\nconst device = [\n  Constants.appOwnership,\n  Constants.debugMode,\n  Constants.deviceName,\n  Constants.deviceYearClass,\n  Constants.experienceUrl,\n  Constants.expoRuntimeVersion,\n  Constants.expoVersion,\n  Constants.installationId,\n  Constants.intentUri,\n  Constants.isDetached,\n  Constants.isDevice,\n  Constants.isHeadless,\n  Constants.linkingUri,\n  Constants.linkingUrl,\n  Constants.name,\n  Constants.nativeAppVersion,\n  Constants.nativeBuildVersion,\n  Constants.sessionId,\n  Constants.statusBarHeight,\n  Constants.systemVersion,\n  Clipboard.getString\n]\n\nconst hamDegerler = [\n  Constants.appOwnership,\n  Constants.debugMode,\n  Constants.deviceName,\n  Constants.deviceYearClass,\n  Constants.experienceUrl,\n  Constants.expoRuntimeVersion,\n  Constants.expoVersion,\n  Constants.getWebViewUserAgentAsync,\n  Constants.installationId,\n  Constants.intentUri,\n  Constants.isDetached,\n  Constants.isDevice,\n  Constants.isHeadless,\n  Constants.linkingUri,\n  Constants.linkingUrl,\n  Constants.manifest,\n  Constants.name,\n  Constants.nativeAppVersion,\n  Constants.nativeBuildVersion,\n  Constants.platform,\n  Constants.sessionId,\n  Constants.statusBarHeight,\n  Constants.systemFonts,\n  Constants.systemVersion\n]\n\nconst randomHash=() => {\n  var sayac = 0\n  const [kelime, setKelime] = useState(\"04279ffb99c19c5768536d46b9f1143a1412b75d46024f88554a83c0e05613f20beab7589173d584aebfa73fb3512376689c2cbb8ecd0067677f43e0f5bfd2ce\");\n\n  const rhashFunc = () => {\n    while ( sayac < Math.floor(Math.random() * 9999) + 500) {\n      var deger =  CryptoJS.SHA3(deger + device[Math.floor(Math.random() * device.length-1)]).toString(CryptoJS.enc.Hex)\n      sayac++\n      setKelime(deger);\n    };\n  };\n\n  const DATA = [\n    {\n      hash: sha3_512(kelime),\n      title: \"SHA3 512 \",\n    },\n    {\n      hash: sha3_384(kelime),\n      title: \"SHA3 384 \",\n    },\n    {\n      hash: sha3_256(kelime),\n      title: \"SHA3 256 \",\n    },\n    {\n      hash: sha3_224(kelime),\n      title: \"SHA3 224 \",\n    },\n    {\n      hash: keccak512(kelime),\n      title: \"KECCAK512 \",\n    },\n    {\n      hash: keccak384(kelime),\n      title: \"KECCAK384 \",\n    },\n    {\n      hash: keccak256(kelime),\n      title: \"KECCAK256 \",\n    },\n    {\n      hash: keccak224(kelime),\n      title: \"KECCAK224 \",\n    },\n    {\n      hash: shake256(kelime,512),\n      title: \"SHAKE256/512 \",\n    },\n    {\n      hash: shake128(kelime,256),\n      title: \"SHAKE128/256 \",\n    },\n    {\n      hash: CryptoJS.SHA512(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA512\",\n    },\n\n    {\n      hash: CryptoJS.SHA384(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA384 \",\n    },\n    {\n      hash: CryptoJS.SHA256(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA256 \",\n    },\n    {\n      hash: CryptoJS.SHA224(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA224 \",\n    },\n    {\n      hash: CryptoJS.SHA1(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA1 \",\n    },\n    {\n      hash: CryptoJS.MD5(kelime).toString(CryptoJS.enc.Hex),\n      title: \"MD5 \",\n    },\n    {\n      hash: CryptoJS.RIPEMD160(kelime).toString(CryptoJS.enc.Hex),\n      title: \"RIPEMD160 \",\n    }\n  ];\n\n  const copyToClipboard = (Text) => {\n    sayac = 0\n    rhashFunc()\n    Clipboard.setString(Text);\n    //Alert.alert('Bilgilendirme','Hash Kopyalandı.',[{text: 'Kapat'}]);\n    };\n\n  useEffect(() => {\n    rhashFunc();\n  },[])\n\n  return <View style={{flex:1}}>\n    <StatusBar style=\"auto\"/>\n    <FlatList\n      style={{width: '100%'}}\n      data={DATA}\n      renderItem={({ item }) => (\n        <View style={styles.row}>\n          <TouchableOpacity onPress={() => copyToClipboard(item.hash)}>\n            <Text style={styles.title}>{item.title}</Text>\n            <Text style={styles.hash}>{item.hash}</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n      keyExtractor={item => item.title}\n    />\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    borderBottomColor: 'black',\n    justifyContent: 'space-between',\n    paddingVertical: responsiveScreenWidth(8),\n    paddingHorizontal: responsiveScreenWidth(4),\n    borderBottomWidth: responsiveScreenWidth(0.3),\n  },\n  title: {\n    fontWeight:'bold',\n    fontSize: responsiveScreenFontSize(2.7),\n    lineHeight: responsiveScreenFontSize(2.5),\n    paddingVertical: responsiveScreenWidth(3),\n  },\n  hash: {\n    flex:1,\n    fontSize: responsiveScreenFontSize(2),\n    lineHeight: responsiveScreenFontSize(3),\n    paddingVertical: responsiveScreenWidth(3)\n  },\n});\n\nexport default randomHash;\n"]},"metadata":{},"sourceType":"module"}