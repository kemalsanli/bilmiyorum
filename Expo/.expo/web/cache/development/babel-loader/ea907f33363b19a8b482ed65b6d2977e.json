{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kemal/Documents/GitHub/bilmiyorum/Expo/src/screens/textToHash.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport { SearchBar } from 'react-native-elements';\nimport 'js-sha3';\nimport CryptoJS from 'crypto-js';\nimport { keccak224, keccak256, keccak384, keccak512, sha3_224, sha3_256, sha3_384, sha3_512, shake128, shake256 } from 'js-sha3';\nimport { responsiveScreenHeight, responsiveScreenWidth, responsiveScreenFontSize } from 'react-native-responsive-dimensions';\nconsole.log(\"demedi deme\");\n\nvar textToHash = function textToHash() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      kelime = _useState2[0],\n      setKelime = _useState2[1];\n\n  var DATA = [{\n    hash: sha3_512(kelime),\n    title: \"SHA3 512 \"\n  }, {\n    hash: sha3_384(kelime),\n    title: \"SHA3 384 \"\n  }, {\n    hash: sha3_256(kelime),\n    title: \"SHA3 256 \"\n  }, {\n    hash: sha3_224(kelime),\n    title: \"SHA3 224 \"\n  }, {\n    hash: keccak512(kelime),\n    title: \"KECCAK512 \"\n  }, {\n    hash: keccak384(kelime),\n    title: \"KECCAK384 \"\n  }, {\n    hash: keccak256(kelime),\n    title: \"KECCAK256 \"\n  }, {\n    hash: keccak224(kelime),\n    title: \"KECCAK224 \"\n  }, {\n    hash: shake256(kelime, 512),\n    title: \"SHAKE256/512 \"\n  }, {\n    hash: shake128(kelime, 256),\n    title: \"SHAKE128/256 \"\n  }, {\n    hash: CryptoJS.SHA512(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA512\"\n  }, {\n    hash: CryptoJS.SHA384(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA384 \"\n  }, {\n    hash: CryptoJS.SHA256(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA256 \"\n  }, {\n    hash: CryptoJS.SHA224(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA224 \"\n  }, {\n    hash: CryptoJS.SHA1(kelime).toString(CryptoJS.enc.Hex),\n    title: \"SHA1 \"\n  }, {\n    hash: CryptoJS.MD5(kelime).toString(CryptoJS.enc.Hex),\n    title: \"MD5 \"\n  }, {\n    hash: CryptoJS.RIPEMD160(kelime).toString(CryptoJS.enc.Hex),\n    title: \"RIPEMD160 \"\n  }];\n\n  var copyToClipboard = function copyToClipboard(Text) {\n    Clipboard.setString(Text);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }), React.createElement(SearchBar, {\n    placeholder: \"Karakter giriniz.\",\n    value: kelime,\n    lightTheme: true,\n    onChangeText: function onChangeText(newSearch) {\n      return setKelime(newSearch);\n    },\n    autoCapitalize: \"none\",\n    borderBottomColor: \"white\",\n    containerStyle: {\n      backgroundColor: 'white'\n    },\n    inputStyle: {\n      color: 'black'\n    },\n    searchIcon: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), React.createElement(FlatList, {\n    style: {\n      width: '100%'\n    },\n    data: DATA,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return copyToClipboard(item.hash);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.hash,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, item.hash)));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    borderBottomColor: 'black',\n    justifyContent: 'space-between',\n    paddingVertical: responsiveScreenWidth(8),\n    paddingHorizontal: responsiveScreenWidth(4),\n    borderBottomWidth: responsiveScreenWidth(0.3)\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: responsiveScreenFontSize(2.7),\n    lineHeight: responsiveScreenFontSize(2.5),\n    paddingVertical: responsiveScreenWidth(3)\n  },\n  hash: {\n    flex: 1,\n    fontSize: responsiveScreenFontSize(2),\n    lineHeight: responsiveScreenFontSize(3),\n    paddingVertical: responsiveScreenWidth(3)\n  }\n});\nexport default textToHash;","map":{"version":3,"sources":["/Users/kemal/Documents/GitHub/bilmiyorum/Expo/src/screens/textToHash.js"],"names":["StatusBar","React","useState","SearchBar","CryptoJS","keccak224","keccak256","keccak384","keccak512","sha3_224","sha3_256","sha3_384","sha3_512","shake128","shake256","responsiveScreenHeight","responsiveScreenWidth","responsiveScreenFontSize","console","log","textToHash","kelime","setKelime","DATA","hash","title","SHA512","toString","enc","Hex","SHA384","SHA256","SHA224","SHA1","MD5","RIPEMD160","copyToClipboard","Text","Clipboard","setString","flex","newSearch","backgroundColor","color","width","item","styles","row","StyleSheet","create","flexDirection","borderBottomColor","justifyContent","paddingVertical","paddingHorizontal","borderBottomWidth","fontWeight","fontSize","lineHeight"],"mappings":"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","sourcesContent":["\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Text, StyleSheet,View,FlatList, TouchableOpacity, Alert, Clipboard } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport 'js-sha3'\nimport CryptoJS from 'crypto-js'\nimport { keccak224, keccak256, keccak384, keccak512, sha3_224, sha3_256, sha3_384, sha3_512, shake128, shake256 } from 'js-sha3';\nimport { responsiveScreenHeight, responsiveScreenWidth, responsiveScreenFontSize } from 'react-native-responsive-dimensions'\n\nconsole.log(\"demedi deme\");\n\n\nconst textToHash=() => {\n\n  const [kelime, setKelime] = useState(\"\");\n\n  const DATA = [\n    {\n      hash: sha3_512(kelime),\n      title: \"SHA3 512 \",\n    },\n    {\n      hash: sha3_384(kelime),\n      title: \"SHA3 384 \",\n    },\n    {\n      hash: sha3_256(kelime),\n      title: \"SHA3 256 \",\n    },\n    {\n      hash: sha3_224(kelime),\n      title: \"SHA3 224 \",\n    },\n    {\n      hash: keccak512(kelime),\n      title: \"KECCAK512 \",\n    },\n    {\n      hash: keccak384(kelime),\n      title: \"KECCAK384 \",\n    },\n    {\n      hash: keccak256(kelime),\n      title: \"KECCAK256 \",\n    },\n    {\n      hash: keccak224(kelime),\n      title: \"KECCAK224 \",\n    },\n    {\n      hash: shake256(kelime,512),\n      title: \"SHAKE256/512 \",\n    },\n    {\n      hash: shake128(kelime,256),\n      title: \"SHAKE128/256 \",\n    },\n    {\n      hash: CryptoJS.SHA512(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA512\",\n    },\n\n    {\n      hash: CryptoJS.SHA384(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA384 \",\n    },\n    {\n      hash: CryptoJS.SHA256(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA256 \",\n    },\n    {\n      hash: CryptoJS.SHA224(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA224 \",\n    },\n    {\n      hash: CryptoJS.SHA1(kelime).toString(CryptoJS.enc.Hex),\n      title: \"SHA1 \",\n    },\n    {\n      hash: CryptoJS.MD5(kelime).toString(CryptoJS.enc.Hex),\n      title: \"MD5 \",\n    },\n    {\n      hash: CryptoJS.RIPEMD160(kelime).toString(CryptoJS.enc.Hex),\n      title: \"RIPEMD160 \",\n    }\n  ];\n  const copyToClipboard = (Text) => {\n    Clipboard.setString(Text);\n    //Alert.alert('Bilgilendirme','Hash Kopyalandı.',[{text: 'Kapat'}]);\n  };\n\n  return <View style={{flex:1}}>\n    <StatusBar style=\"auto\"/>\n    <SearchBar\n      placeholder=\"Karakter giriniz.\"\n      value={kelime}\n      lightTheme\n      onChangeText={newSearch => setKelime(newSearch)}\n      autoCapitalize = 'none'\n      borderBottomColor = 'white'\n      containerStyle={{ backgroundColor: 'white'  }}\n      inputStyle={{ color:'black'}}\n      searchIcon = {null}\n    />\n    <FlatList\n      style={{width: '100%'}}\n      data={DATA}\n      renderItem={({ item }) => (\n        <View style={styles.row} >\n          <TouchableOpacity onPress={() => copyToClipboard(item.hash)}>\n            <Text style={styles.title}>{item.title}</Text>\n            <Text style={styles.hash}>{item.hash}</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n      keyExtractor={item => item.title}\n    />\n  </View>\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    borderBottomColor: 'black',\n    justifyContent: 'space-between',\n    paddingVertical: responsiveScreenWidth(8),\n    paddingHorizontal: responsiveScreenWidth(4),\n    borderBottomWidth: responsiveScreenWidth(0.3),\n  },\n  title: {\n    fontWeight:'bold',\n    fontSize: responsiveScreenFontSize(2.7),\n    lineHeight: responsiveScreenFontSize(2.5),\n    paddingVertical: responsiveScreenWidth(3),\n  },\n  hash: {\n    flex:1,\n    fontSize: responsiveScreenFontSize(2),\n    lineHeight: responsiveScreenFontSize(3),\n    paddingVertical: responsiveScreenWidth(3)\n  },\n});\n\nexport default textToHash;\n"]},"metadata":{},"sourceType":"module"}