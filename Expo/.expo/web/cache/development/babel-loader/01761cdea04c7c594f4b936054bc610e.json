{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CellularGeneration } from \"./Cellular.types\";\nexport default {\n  get allowsVoip() {\n    return null;\n  },\n\n  get carrier() {\n    return null;\n  },\n\n  get isoCountryCode() {\n    return null;\n  },\n\n  get mobileCountryCode() {\n    return null;\n  },\n\n  get mobileNetworkCode() {\n    return null;\n  },\n\n  getCellularGenerationAsync: function getCellularGenerationAsync() {\n    var connection;\n    return _regeneratorRuntime.async(function getCellularGenerationAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            connection = navigator['connection'] || navigator['mozConnection'] || navigator['webkitConnection'] || null;\n\n            if (!(connection !== null)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.t0 = connection.effectiveType;\n            _context.next = _context.t0 === 'slow-2g' ? 5 : _context.t0 === '2g' ? 5 : _context.t0 === '3g' ? 6 : _context.t0 === '4g' ? 7 : 8;\n            break;\n\n          case 5:\n            return _context.abrupt(\"return\", CellularGeneration.CELLULAR_2G);\n\n          case 6:\n            return _context.abrupt(\"return\", CellularGeneration.CELLULAR_3G);\n\n          case 7:\n            return _context.abrupt(\"return\", CellularGeneration.CELLULAR_4G);\n\n          case 8:\n            return _context.abrupt(\"return\", CellularGeneration.UNKNOWN);\n\n          case 9:\n            _context.next = 12;\n            break;\n\n          case 11:\n            return _context.abrupt(\"return\", CellularGeneration.UNKNOWN);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["../src/ExpoCellular.web.ts"],"names":[],"mappings":";AAAA,SAAS,kBAAT;AAEA,eAAe;AACb,MAAI,UAAJ,GAAc;AACZ,WAAO,IAAP;AACD,GAHY;;AAIb,MAAI,OAAJ,GAAW;AACT,WAAO,IAAP;AACD,GANY;;AAOb,MAAI,cAAJ,GAAkB;AAChB,WAAO,IAAP;AACD,GATY;;AAUb,MAAI,iBAAJ,GAAqB;AACnB,WAAO,IAAP;AACD,GAZY;;AAab,MAAI,iBAAJ,GAAqB;AACnB,WAAO,IAAP;AACD,GAfY;;AAgBP,EAAA,0BAhBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBL,YAAA,UAjBK,GAkBT,SAAS,CAAC,YAAD,CAAT,IACA,SAAS,CAAC,eAAD,CADT,IAEA,SAAS,CAAC,kBAAD,CAFT,IAGA,IArBS;;AAAA,kBAsBP,UAAU,KAAK,IAtBR;AAAA;AAAA;AAAA;;AAAA,0BAuBD,UAAU,CAAC,aAvBV;AAAA,4CAwBF,SAxBE,uBAyBF,IAzBE,uBA2BF,IA3BE,uBA6BF,IA7BE;AAAA;;AAAA;AAAA,6CA0BE,kBAAkB,CAAC,WA1BrB;;AAAA;AAAA,6CA4BE,kBAAkB,CAAC,WA5BrB;;AAAA;AAAA,6CA8BE,kBAAkB,CAAC,WA9BrB;;AAAA;AAAA,6CAgCE,kBAAkB,CAAC,OAhCrB;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAmCF,kBAAkB,CAAC,OAnCjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import { CellularGeneration } from './Cellular.types';\n\nexport default {\n  get allowsVoip(): null {\n    return null;\n  },\n  get carrier(): null {\n    return null;\n  },\n  get isoCountryCode(): null {\n    return null;\n  },\n  get mobileCountryCode(): null {\n    return null;\n  },\n  get mobileNetworkCode(): null {\n    return null;\n  },\n  async getCellularGenerationAsync(): Promise<CellularGeneration> {\n    const connection =\n      navigator['connection'] ||\n      navigator['mozConnection'] ||\n      navigator['webkitConnection'] ||\n      null;\n    if (connection !== null) {\n      switch (connection.effectiveType) {\n        case 'slow-2g':\n        case '2g':\n          return CellularGeneration.CELLULAR_2G;\n        case '3g':\n          return CellularGeneration.CELLULAR_3G;\n        case '4g':\n          return CellularGeneration.CELLULAR_4G;\n        default:\n          return CellularGeneration.UNKNOWN;\n      }\n    } else {\n      return CellularGeneration.UNKNOWN;\n    }\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}